# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedPathHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedPathHelpersModule`.


module GeneratedPathHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def close_pr_tab_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def close_pr_tabs_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def dashboard_index_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def demo_login_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_password_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_password_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_registration_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_repository_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def open_pr_tabs_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def password_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def passwords_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_review_llm_conversation_messages_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_review_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def pull_request_reviews_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_health_check_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_notes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def registrations_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repositories_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def repository_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def reset_tabs_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def select_tab_tabs_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def settings_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_all_repositories_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def sync_repository_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_recede_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_refresh_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def turbo_resume_historical_location_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_path(*args); end
end
