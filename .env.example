# =============================================================================
# Environment Configuration Example
# =============================================================================
# Copy this file to .env and fill in your actual values
# This file should be committed to version control as documentation
# The actual .env file should NEVER be committed (it's in .gitignore)

# =============================================================================
# Codecov Configuration
# =============================================================================
# Codecov is used for code coverage reporting and tracking
# Sign up at https://codecov.io and connect your GitHub repository

# Your Codecov upload token (required for uploading coverage reports)
# Get this from: https://codecov.io/gh/your-username/your-repo/settings
CODECOV_TOKEN=your_codecov_token_here

# Your GitHub repository slug in format: username/repository-name
# This should match your GitHub repository exactly
CODECOV_SLUG=your-username/your-repository-name

# =============================================================================
# GitHub Integration (if applicable)
# =============================================================================
# If your application integrates with GitHub API, you may need these:

# GitHub Personal Access Token for API access (used for integration tests)
# Set this to a valid token in your .env to enable real GitHub API integration tests.
# GITHUB_TEST_PAT=your_github_personal_access_token_for_tests

# GitHub Personal Access Token for API access
# GITHUB_TOKEN=your_github_personal_access_token

# GitHub API base URL (usually only needed for GitHub Enterprise)
# GITHUB_API_ENDPOINT=https://api.github.com

# =============================================================================
# Development Environment
# =============================================================================
# General development settings

# Set to 'true' to enable coverage reporting in development
# COVERAGE=false

# Set to 'true' to simulate CI environment locally
# CI=false

# Rails environment (usually set automatically)
# RAILS_ENV=development

# =============================================================================
# Testing Configuration
# =============================================================================
# Settings specific to the test environment

# Force parallel test execution (useful for CI)
# PARALLEL_WORKERS=2

# Skip system tests (useful for faster feedback during development)
# SKIP_SYSTEM_TESTS=false

# =============================================================================
# Database Configuration
# =============================================================================
# Database settings (if not using default SQLite)

# DATABASE_URL=sqlite3:db/development.sqlite3
# TEST_DATABASE_URL=sqlite3:db/test.sqlite3

# =============================================================================
# Security & Authentication
# =============================================================================
# Authentication and security related environment variables

# Rails master key (auto-generated, usually don't need to set manually)
# RAILS_MASTER_KEY=your_master_key_here

# Session secret (Rails will generate if not provided)
# SECRET_KEY_BASE=your_secret_key_base_here

# =============================================================================
# External Service Configuration
# =============================================================================
# Configuration for external APIs and services your app might use

# LLM API Keys (if your app integrates with AI services)
# OPENAI_API_KEY=your_openai_api_key
# ANTHROPIC_API_KEY=your_anthropic_api_key

# =============================================================================
# Setup Instructions
# =============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Edit .env with your actual values
# 3. Never commit the .env file to version control
# 4. For Codecov setup:
#    a. Go to https://codecov.io
#    b. Sign in with GitHub
#    c. Add your repository
#    d. Copy the upload token to CODECOV_TOKEN
#    e. Set CODECOV_SLUG to your GitHub username/repository format
